1. Compiled Language: there is compiler. transfer to Computer Language.  
+ super fast to run
- compilation process can take a time
Ex. C, C++, Go, Rust


2. Interpreter: interpreter direct request to Computer
+ no time on compilation
+ could be used on different OS
- slower than compilor 
Ex. Python, Ruby, JavaScript, Bash, PowerShell


3. Mixed: exists intermediate code.
+ Different OS
Java, C#


import os
os.getcwd() #see default location
os.chdir() #change defaul location ex. \\folder\\folder\\



cat python_file.py 	#gives the context of the file in LINUX
python python_file.py 		#execute the file


shebang
nano python_file.py

chmod +x python_file.py #make the code executable
./hello_world.py 		#runs the code as the result of the chmod,   ./ means current directory


Modules:

shutil
disk_usage




https://stackoverflow.com/questions/4037939/powershell-says-execution-of-scripts-is-disabled-on-this-system
As an Administrator, you can set the execution policy by typing this into your PowerShell window:

Set-ExecutionPolicy RemoteSigned
For more information, see Using the Set-ExecutionPolicy Cmdlet.

When you are done, you can set the policy back to its default value with:

Set-ExecutionPolicy Restricted


#files work as OPEN-USE-CLOSE principle
file = open('data.txt')
print(file.readline()) # reads first line
print(file.readline()) # if you run 2nd time then it reads 2nd line
print(file.read()) 	   # read the file till the end after where you left
file.close()

print(file.readlines()) #reads all lines (format: list)

# you need to close the file as:
# 1. you could not modify it while it is open in python
# 2. using 1st logic other processes could not use it
# In order to solve it, use with:



checked_out=["Andrea", "Manuel", "Khalid"]
temp_list=[] #guests.txt

with open("guests.txt", 'r') as guests:
    for g in guests:
        temp_list.append(g.strip())

with open("guests.txt", 'w') as guests:
    for name in temp_list:
        if name not in checked_out:
            guests.write(name + "\n") # writes lines to file



with open('data.txt') as file:

open('data.txt', 'r') 
# r - read only, error if not exists
# w - immediately overwrite the file or create new if not exists
# a - append, add new lines to existing file
# r+ - read and write  



import os
os.remove('filename.txt') # removes the file, if not exists then error
os.rename('oldname.txt','newname.txt') # rename the file, if not exists then error
os.path.exists('filename.txt') # file exists in the folder TRUE or FALSE
os.path.getsize('filename.txt') #results in bytes (NOT BIT)
os.path.getmtime('filename.txt')
os.path.abspath('filename.txt')


import datetime
x = os.path.getmtime('filename.txt')
datetime.datetime.fromtimestamp(x)


